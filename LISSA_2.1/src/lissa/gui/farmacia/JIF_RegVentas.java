package lissa.gui.farmacia;

import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import lissa.be.Almacen;
import lissa.be.AlmacenProducto;
import lissa.be.Caja;
import lissa.be.Cuentaxcobrar;
import lissa.be.DetalleVenta;
import lissa.be.FarComprobante;
import lissa.be.HistorialAtencionFps;
import lissa.be.Kardex;
import lissa.be.Persona;
import lissa.be.PersonaJuridica;
import lissa.be.Producto;
import lissa.be.Rol;
import lissa.be.TipoComprobante;
import lissa.be.TipoDocidentidad;
import lissa.be.Usuario;
import lissa.be.Venta;
import lissa.bl.AlmacenProductoBl;
import lissa.bl.CajaBl;
import lissa.bl.CuentaxcobrarBl;
import lissa.bl.DetalleVentaBl;
import lissa.bl.HistorialAtencionBl;
import lissa.bl.KardexBl;
import lissa.bl.OrganizacionBl;
import lissa.bl.PersonaBl;
import lissa.bl.PersonaJuridicaBl;
import lissa.bl.TipoComprobanteBl;
import lissa.bl.VentaBl;
import lissa.controller.AlmacenCtrl;
import lissa.controller.FarComprobanteCtrl;
import lissa.controller.FarFormaPagoCtrl;
import lissa.controller.TipoDocIdentidadCtrl;
import lissa.ds.DSConeccion;
import lissa.gui.JF_Principal;
import lissa.gui.JIF_AdministrarPersonaJuridica;
import lissa.gui.JIF_AdministrarPersonaNatural;
import lissa.reportes.ReportGeneric;
import lissa.table.ModeloVentaProducto;
import lissa.util.Mensajes;
import lissa.util.Utilitarios;
import lissa.util.Variables;

public class JIF_RegVentas extends javax.swing.JInternalFrame {

    private JF_Principal root;
    private ModeloVentaProducto oModeloVentaProducto;
    private TipoComprobanteBl oTipoComprobanteBl;
    private ArrayList<TipoComprobante> listTipoComprobante;
    private Persona oPersonaPaciente;
    private Persona oPersonaCliente;
    private PersonaBl oPersonaBl;
    private PersonaJuridicaBl oPersonaJuridicaBl;
    private DetalleVenta oDetalleVenta;
    private DetalleVentaBl oDetalleVentBl;
    private Venta oVenta;
    private VentaBl oVentaBl;
    public static final BigDecimal IGV = new BigDecimal("0.18");
    private BigDecimal montoSubTotal = new BigDecimal("0.00");
    private BigDecimal montoIgv = new BigDecimal("0.00");
    private BigDecimal montoTotal = new BigDecimal("0.00");
    private BigDecimal totalDescuentos = new BigDecimal("0.00");
    private List<DetalleVenta> listVenta;

    private Usuario userTemp;
    private Persona perTemp;
    private Rol rolTemp;
    private Caja oCaja;
    private CajaBl oCajaBl;
    private Kardex oKardex;
    private KardexBl oKardexBl;
    private AlmacenProducto oAlmacenProducto;
    private AlmacenProducto oAlmacenProductoTemp;
    private AlmacenProductoBl oAlmacenProductoBl;
    private JComboBox cbxAlmacen;
    private AlmacenCtrl oAlmacenCtrl;
    private FarComprobanteCtrl oFarComprobanteCtrl;
    private FarFormaPagoCtrl oFarFormaPagoCtrl;
    //Variables para el reporte
    private ReportGeneric reportGenric = null;
    private JPanel reportPanel = null;
    private DSConeccion ds = null;
    private JInternalFrame reportVisor = null;

    private String tipoComprobante = "";
    private Cuentaxcobrar oCuentaxcobrar;
    private CuentaxcobrarBl oCuentaxcobrarBl;
    private String comprobante = "";
    private HistorialAtencionFps oHistorialAtencionFps;
    private HistorialAtencionBl oHistorialAtencionFpsBl;
    private TipoDocIdentidadCtrl oTipoDocIdentidadCtrl;

    public JIF_RegVentas(JF_Principal root) {
        initComponents();
        this.root = root;
        oModeloVentaProducto = new ModeloVentaProducto();
        tblProductos.setModel(oModeloVentaProducto);
        personalizaTabla();
        cbxAlmacen = new JComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbxTipoComprobante = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txfNumComprobante = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txfSerie = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txfRuc = new javax.swing.JTextField();
        txfRazonSocial = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbxTipoDoc2 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txfDireccion = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txfCorreo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jdcFechaComprobante = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSubTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTotalDescuento = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMontoIgv = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblMontoTotal = new javax.swing.JLabel();
        btnFormapago = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txfEfectivo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txfVuelto = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Registro de ventas");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cbxTipoComprobante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTipoComprobanteItemStateChanged(evt);
            }
        });
        cbxTipoComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoComprobanteActionPerformed(evt);
            }
        });

        jLabel7.setText("Comprobante :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipoComprobante, 0, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("NÂ° ");

        txfNumComprobante.setEditable(false);

        jLabel11.setText("Serie :");

        txfSerie.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfNumComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfNumComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txfSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel5.setText("Facturar a :");

        txfRuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfRucKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfRucKeyReleased(evt);
            }
        });

        txfRazonSocial.setEditable(false);

        jLabel13.setText("Nro Doc :");

        cbxTipoDoc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoDoc2ActionPerformed(evt);
            }
        });

        jLabel14.setText("DirecciÃ³n :");

        txfDireccion.setEnabled(false);

        jLabel15.setText("Correo ElectrÃ³nico :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbxTipoDoc2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txfRuc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txfCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txfRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cbxTipoDoc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jdcFechaComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdcFechaComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblProductosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/add.png"))); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/remove.png"))); // NOI18N
        btnQuitar.setText("Quitar");
        btnQuitar.setToolTipText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuitar))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnQuitar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Save16.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.setToolTipText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/cancel16.png"))); // NOI18N
        jButton3.setText("Cancelar");
        jButton3.setToolTipText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setLayout(new java.awt.GridLayout(4, 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Op. Gravada :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel1);

        lblSubTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSubTotal.setForeground(new java.awt.Color(0, 0, 204));
        lblSubTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubTotal.setText("0.00");
        jPanel8.add(lblSubTotal);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Tot. Descuento :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel2);

        lblTotalDescuento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotalDescuento.setForeground(new java.awt.Color(0, 0, 204));
        lblTotalDescuento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalDescuento.setText("0.00");
        jPanel8.add(lblTotalDescuento);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("IGV :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel8);

        lblMontoIgv.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMontoIgv.setForeground(new java.awt.Color(0, 0, 204));
        lblMontoIgv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMontoIgv.setText("0.00");
        jPanel8.add(lblMontoIgv);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 204));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Total Venta :");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel17);

        lblMontoTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMontoTotal.setForeground(new java.awt.Color(0, 0, 204));
        lblMontoTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMontoTotal.setText("0.00");
        jPanel8.add(lblMontoTotal);

        btnFormapago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Money-icon.png"))); // NOI18N
        btnFormapago.setText("Forma de pago");
        btnFormapago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormapagoActionPerformed(evt);
            }
        });

        jLabel9.setText("Efectivo : ");

        txfEfectivo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txfEfectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txfEfectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfEfectivoKeyReleased(evt);
            }
        });

        jLabel10.setText("Vuelto :");

        txfVuelto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txfVuelto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFormapago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(btnFormapago))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel10.getAccessibleContext().setAccessibleName("     Vuelto :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTipoComprobanteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTipoComprobanteItemStateChanged

    }//GEN-LAST:event_cbxTipoComprobanteItemStateChanged

    private void cbxTipoComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoComprobanteActionPerformed
        if (cbxTipoComprobante.getSelectedIndex() > 0) {
            configurarComprobante();
            calcularMontos();
        }
    }//GEN-LAST:event_cbxTipoComprobanteActionPerformed

    private void txfRucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfRucKeyPressed

    }//GEN-LAST:event_txfRucKeyPressed

    private void txfRucKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfRucKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String ref = txfRuc.getText().toUpperCase().trim();
            if (!ref.equals("")) {
                if (cbxTipoDoc2.getSelectedIndex() > 0) {
                    if (cbxTipoDoc2.getSelectedItem().toString().equals("RUC")) {
                        buscarPersonaXRuc(ref);
                    } else {
                        buscarPersonaXDni(ref);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione un Tipo de Documento", "AtenciÃ³n", JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                Mensajes.msjParametroVacio();
            }
        }
    }//GEN-LAST:event_txfRucKeyReleased

    private void tblProductosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseReleased
        if (tblProductos.getSelectedRow() != -1 && tblProductos.getRowSelectionAllowed()) {
            oDetalleVenta = oModeloVentaProducto.get(tblProductos.getSelectedRow());
        } else {
            Mensajes.tblSelected();
        }
    }//GEN-LAST:event_tblProductosMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        root.jifBusqProductos.setInvocador(JIF_BusqProductos.JIF_VENTAS);
        root.insertarInternalFrames(root.jifBusqProductos);
        root.jifBusqProductos.inicializar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        if (tblProductos.getSelectedRow() != -1 && tblProductos.getRowSelectionAllowed()) {
            //recalculaMontos();//Primero recalcular antes de quitar el item del modelo
            quitarProducto(tblProductos.getSelectedRow());
            calcularMontos();

        } else {
            Mensajes.tblSelected();
        }
        personalizaTabla();
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Registro transaccional
        registrar();
        //Fin transaccional        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        resetComponent();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txfEfectivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfEfectivoKeyReleased
        if (!txfEfectivo.getText().trim().equals("")) {
            calcularVuelto();
        } else {
            txfVuelto.setText("");
        }
    }//GEN-LAST:event_txfEfectivoKeyReleased

    private void btnFormapagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormapagoActionPerformed
        insertarJifFormaPago();
    }//GEN-LAST:event_btnFormapagoActionPerformed

    private void cbxTipoDoc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoDoc2ActionPerformed
        validarTipoDoc();
    }//GEN-LAST:event_cbxTipoDoc2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFormapago;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JComboBox cbxTipoComprobante;
    private javax.swing.JComboBox cbxTipoDoc2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFechaComprobante;
    private javax.swing.JLabel lblMontoIgv;
    private javax.swing.JLabel lblMontoTotal;
    private javax.swing.JLabel lblSubTotal;
    private javax.swing.JLabel lblTotalDescuento;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txfCorreo;
    private javax.swing.JTextField txfDireccion;
    private javax.swing.JTextField txfEfectivo;
    private javax.swing.JTextField txfNumComprobante;
    private javax.swing.JTextField txfRazonSocial;
    private javax.swing.JTextField txfRuc;
    private javax.swing.JTextField txfSerie;
    private javax.swing.JTextField txfVuelto;
    // End of variables declaration//GEN-END:variables
    public void inicializar() {
        cargarCbxTipoComprobanteFar();
        cargarCbxAlmacen();
        Utilitarios.fechaActual(jdcFechaComprobante);
        llenarCbxTipoDoc();
    }

    private void llenarCbxTipoDoc() {
        oTipoDocIdentidadCtrl = new TipoDocIdentidadCtrl(root);
        //oTipoDocIdentidadCtrl.rellenaTipoDocumento(cbxTipoDoc1);
        oTipoDocIdentidadCtrl.rellenaTipoDocumento(cbxTipoDoc2);
        //oTipoDocIdentidadCtrl.defaultSelectCbx("DNI", cbxTipoDoc1);
    }

    private void buscarPersonaPaciente(String dni) {
        oPersonaPaciente = new Persona();
        oPersonaBl = new PersonaBl();
        oPersonaPaciente = oPersonaBl.buscarPersonaXDni(dni);
        if (oPersonaPaciente != null) {
            //txfNombresCliente.setText(oPersonaPaciente.getNombre().trim() + " " + oPersonaPaciente.getApellidoPaterno().trim() + " " + oPersonaPaciente.getApellidoMaterno().trim());
        } else {
            //txfNombresCliente.setText("");
            insertarJifBuscaPersonaPaciente();
        }
    }

    private void buscarPersonaXRuc(String ref) {
        oPersonaBl = new PersonaBl();
        oPersonaCliente = oPersonaBl.buscarPersonaXRuc(ref);
        if (oPersonaCliente != null) {
            txfRazonSocial.setText(!oPersonaCliente.getRazonSocial().trim().equals("") ? oPersonaCliente.getRazonSocial().trim() : oPersonaCliente.getNombre().trim() + " " + oPersonaCliente.getApellidoPaterno().trim() + " " + oPersonaCliente.getApellidoMaterno().trim());
            txfCorreo.setText(oPersonaCliente.getCorreoElectronico() != null ? oPersonaCliente.getCorreoElectronico().trim() : "");
            txfDireccion.setText(!oPersonaCliente.getDireccion().trim().equals("") ? oPersonaCliente.getDireccion().trim() : "");
        } else {
            insertarJifBuscaPersonaCliente(ref);
        }
    }

    private void buscarPersonaXDni(String ref) {
        oPersonaBl = new PersonaBl();
        oPersonaCliente = oPersonaBl.buscarPersonaXDni(ref);
        if (oPersonaCliente != null) {
            txfRazonSocial.setText(oPersonaCliente.getNombre().trim() + " " + oPersonaCliente.getApellidoPaterno().trim() + " " + oPersonaCliente.getApellidoMaterno().trim());
            txfCorreo.setText(oPersonaCliente.getCorreoElectronico() != null ? oPersonaCliente.getCorreoElectronico().trim() : "");
            txfDireccion.setText(!oPersonaCliente.getDireccion().trim().equals("") ? oPersonaCliente.getDireccion().trim() : "");
        } else {
            insertarJifBuscaPersonaCliente(ref);
        }
    }

    private void insertarJifBuscaPersonaCliente(String ref) {
        int op;
        op = JOptionPane.showConfirmDialog(null, "No Existe persona con NÂ° Doc : " + ref + " \nÂ¿Desea registrar a la persona?", "AtenciÃ³n", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            root.jifAdministrarPersonanatural.setInvocador(JIF_AdministrarPersonaNatural.JIF_VENTAS2);
            root.insertarInternalFrames(root.jifAdministrarPersonanatural);
            root.jifAdministrarPersonanatural.inicializar();
        }
    }

    //Aqui se carega los datos de persona del paciente  para quien son los medicamentos
    /*
     public void cargarDatosPaciente(Persona beanTabla) {
     oPersonaPaciente = beanTabla;
     txfNumDni.setText(oPersonaPaciente.getNumeroDocumento().trim());
     txfNombresCliente.setText(oPersonaPaciente.getNombre().trim() + " " + oPersonaPaciente.getApellidoPaterno().trim() + " " + oPersonaPaciente.getApellidoMaterno().trim());
     }
     */
    void enviaDatosProducto(DetalleVenta obj) {
        oDetalleVenta = obj;
        //verificar  la existencia del producto en la lista de la tabla
        if (oModeloVentaProducto.size() == 0) {
            oModeloVentaProducto.add(oDetalleVenta);
        } else {
            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
                DetalleVenta det = oModeloVentaProducto.get(i);
                if (oDetalleVenta.getIdAlmacenproducto().equals(det.getIdAlmacenproducto())) {
                    //el producto ya existe en la lista
                    JOptionPane.showMessageDialog(null, "El producto ya existe  en la lista", "AtenciÃ³n", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    oModeloVentaProducto.add(oDetalleVenta);
                    break;
                }
            }
        }
        personalizaTabla();
        calcularMontos();
    }

    private void personalizaTabla() {
        Utilitarios.formateaColumna(0, tblProductos, 50);
        Utilitarios.formateaColumna(1, tblProductos, 80);
        Utilitarios.formateaColumna(3, tblProductos, 150);
        Utilitarios.formateaColumna(4, tblProductos, 150);
        Utilitarios.formateaColumna(5, tblProductos, 70);
        Utilitarios.formateaColumna(6, tblProductos, 70);
        Utilitarios.alinearDatosColumnaTablaCentro(1, tblProductos);
        Utilitarios.alinearDatosColumnaTablaDerecha(5, tblProductos);
        Utilitarios.alinearDatosColumnaTablaDerecha(6, tblProductos);
    }

    private void calcularMontos() {
        if (oModeloVentaProducto.size() > 0) {
            System.out.println("size ... "+oModeloVentaProducto.size());
            resetTotales();
            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
                DetalleVenta dv = new DetalleVenta();
                dv = oModeloVentaProducto.get(i);
                montoSubTotal = montoSubTotal.add(dv.getSubTotal());
                montoIgv = montoIgv.add(dv.getMontoIgvItem());
                montoTotal = montoTotal.add(dv.getMontoTotal());
                totalDescuentos = BigDecimal.ZERO;
            }
            //impresion de totales
            lblSubTotal.setText(montoSubTotal.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoIgv.setText(montoIgv.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoTotal.setText(montoTotal.setScale(2, RoundingMode.HALF_UP).toString());
            lblTotalDescuento.setText(totalDescuentos.setScale(2, RoundingMode.HALF_UP).toString());
        } else {
            resetTotales();
            //impresion de totales
            lblSubTotal.setText(montoSubTotal.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoIgv.setText(montoIgv.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoTotal.setText(montoTotal.setScale(2, RoundingMode.HALF_UP).toString());
            lblTotalDescuento.setText(totalDescuentos.setScale(2, RoundingMode.HALF_UP).toString());
        }
    }

    private void resetTotales() {
        montoSubTotal = BigDecimal.ZERO;
        montoIgv = BigDecimal.ZERO;
        montoTotal = BigDecimal.ZERO;
        totalDescuentos = BigDecimal.ZERO;
    }

    private void quitarProducto(int selectedRow) {
        oModeloVentaProducto.remove(selectedRow);
    }

    private boolean isDatosValidos() {
        return (cbxTipoComprobante.getSelectedIndex() > 0
                && !txfNumComprobante.getText().trim().equals("")
                && jdcFechaComprobante.getDate() != null
                && oModeloVentaProducto.size() > 0);
    }

    private void paintComponents() {
        Utilitarios.paintCbxVacio(cbxTipoComprobante);
        Utilitarios.paintBorderTxfVacio(txfNumComprobante);
        Utilitarios.paintJdcVacio(jdcFechaComprobante);
    }

    private void resetPaintComponent() {
        Utilitarios.resetPaintCbx(cbxTipoComprobante);
        Utilitarios.resetPaintBorderTxf(txfNumComprobante);
        Utilitarios.resetPaintJdc(jdcFechaComprobante);
    }

    private int registrarVenta(ModeloVentaProducto omvp) {
        oVentaBl = new VentaBl();
        oVenta.setEstadoSunat("NO ENVIADO");
        oVenta.setPersonaPaciente(oPersonaPaciente != null ? oPersonaPaciente : null);
        oVenta.setClientepersonanatural(oPersonaCliente != null ? oPersonaCliente : null);
        oVenta.setUsuarioReg(userTemp);
        oVenta.setFechaVenta(jdcFechaComprobante.getDate());
        oVenta.setHoraVenta(Utilitarios.horaActual());
        oVenta.setFarComprobante(((FarComprobante) cbxTipoComprobante.getSelectedItem()));
        oVenta.setSerie(txfSerie.getText().trim());
        oVenta.setCorreoClienteTemp(txfCorreo.getText().toUpperCase().trim());
        //Generar numeracion de comprobante solo cuando el monto total sea mayor a cero
        if (new BigDecimal(lblMontoTotal.getText().trim()).compareTo(BigDecimal.ZERO) == 1) {//el primer valor es mayor
            oVenta.setNumComprobante(generarNumeracionComprobante());
        }
        oVenta.setSubTotal(new BigDecimal(lblSubTotal.getText().trim()));
        oVenta.setMontoIgv(new BigDecimal(lblMontoIgv.getText().trim()));
        oVenta.setTotal(new BigDecimal(lblMontoTotal.getText().trim()));
        oVenta.setEstado("ACT");
        oVenta.setMotivoAnulacion("");
        //Buscar la caja del usuario que ingreso al sistema
        oVenta.setCaja(oCaja);
        oVenta.setNumOperacion(obtenerNumOperacion());
        oVenta.setDescripcionSeguros("");
        oVenta.setOrganizacion(new OrganizacionBl().buscar(1));
        oVenta.setUsuarioAnu(null);
        oVenta.setTipoDocCliente(cbxTipoDoc2.getSelectedIndex() > 0 ? (TipoDocidentidad) cbxTipoDoc2.getSelectedItem() : null);
        //efact
        oVenta.setTotalValorVentaOpGravadas(oVenta.getSubTotal());
        oVenta.setTotalValorVentaOpeInafectas(BigDecimal.ZERO);
        oVenta.setTotalValorVentaOpeExoneradas(BigDecimal.ZERO);
        oVenta.setTotalSumatoriaIgv(oVenta.getMontoIgv());
        oVenta.setTotalSumatoriaIsc(BigDecimal.ZERO);
        oVenta.setTotalSumatoriaOtrosTributos(BigDecimal.ZERO);
        oVenta.setTotalSumatoriaOtrosCargos(BigDecimal.ZERO);
        oVenta.setTotalSumatoriaDescuentos(new BigDecimal(lblTotalDescuento.getText().trim()));
        oVenta.setTotalImporteVenta(oVenta.getTotalValorVentaOpGravadas()
                .add(oVenta.getTotalValorVentaOpeInafectas()
                        .add(oVenta.getTotalValorVentaOpeExoneradas()
                                .add(oVenta.getTotalSumatoriaIgv()
                                        .add(oVenta.getTotalSumatoriaIsc()
                                                .add(oVenta.getTotalSumatoriaOtrosTributos()
                                                        .add(oVenta.getTotalSumatoriaOtrosCargos())))))));
        oVenta.setTipoMoneda("PEN");
        oVenta.setTotalOpeGratuitas(BigDecimal.ZERO);
        //setear  valores para el  kardex
        List<Kardex> listKardex = new LinkedList<>();
        for (int i = 0; i < omvp.getRowCount(); i++) {
            oDetalleVenta = omvp.get(i);
            oKardex = new Kardex();
            oKardexBl = new KardexBl();

            oKardex.setAlmacenByIdOrigen((Almacen) cbxAlmacen.getSelectedItem());
            oKardex.setIdAlmacenAfectado(((Almacen) cbxAlmacen.getSelectedItem()).getIdalmacen());
            oKardex.setTipoOperacion("SALIDA");//entrada y salida
            oKardex.setOperacion("VENTA");
            oKardex.setFechaMov(new Date());
            oKardex.setHoraMov(Utilitarios.horaActual());
            oKardex.setComprobante(cbxTipoComprobante.getSelectedItem().toString());
            oKardex.setNumSerie("");
            oKardex.setNumComprobante(Long.parseLong(txfNumComprobante.getText().trim()));
            oKardex.setOrigen(((Almacen) cbxAlmacen.getSelectedItem()).getNombre());
            oKardex.setDestino(txfRazonSocial.getText().trim().toUpperCase());
            oKardex.setObservacion("");
            oKardex.setGrupoNumeracion(1);
            oKardex.setIdProducto(Long.parseLong(oDetalleVenta.getProducto().getIdproducto() + ""));
            oKardex.setCantidad(oDetalleVenta.getCantidadVenta());
            oKardex.setValorUnit(oDetalleVenta.getPrecioVenta());
            oKardex.setIdAlmacenproducto(oDetalleVenta.getIdAlmacenproducto());
            oKardex.setEstado(1);
            //Obtener el ultimo numero de orden de registro de kardex
            long nro = oKardexBl.nroOrdenregistro(oKardex.getIdProducto());
            oKardex.setNroOrden(nro + 1);

            oAlmacenProductoBl = new AlmacenProductoBl();
            AlmacenProducto ap = oAlmacenProductoBl.buscar(oDetalleVenta.getIdAlmacenproducto());
            oKardex.setStockActual(ap.getStockActual().subtract(oKardex.getCantidad()));

            listKardex.add(oKardex);
        }

        return oVentaBl.registrar(oVenta, omvp, oCuentaxcobrar, oHistorialAtencionFps, listKardex);

    }

    public void cargarDatosUser(Usuario user, Persona oPersona, Rol oRol) {
        userTemp = user;
        perTemp = oPersona;
        rolTemp = oRol;
    }

    private Caja buscarCaja(Usuario user) {
        oCajaBl = new CajaBl();
        return oCajaBl.buscarPorIdusuario(user);
    }
    /*
     private void registrarKardexAlmacen() {
     oKardex = registrarKardex();

     }
     */
    /*
     private Kardex registrarKardex() {
     for (int i = 0; i < oModeloVentaProducto.getRowCount(); i++) {
     oDetalleVenta = oModeloVentaProducto.get(i);
     oKardex = new Kardex();
     oKardexBl = new KardexBl();

     oKardex.setAlmacenByIdOrigen((Almacen) cbxAlmacen.getSelectedItem());
     oKardex.setIdAlmacenAfectado(((Almacen) cbxAlmacen.getSelectedItem()).getIdalmacen());
     oKardex.setTipoOperacion("SALIDA");//entrada y salida
     oKardex.setOperacion("VENTA");
     oKardex.setFechaMov(new Date());
     oKardex.setHoraMov(Utilitarios.horaActual());
     oKardex.setComprobante(cbxTipoComprobante.getSelectedItem().toString());
     oKardex.setNumSerie("");
     oKardex.setNumComprobante(Long.parseLong(txfNumComprobante.getText().trim()));
     oKardex.setOrigen(((Almacen) cbxAlmacen.getSelectedItem()).getNombre());
     oKardex.setDestino(txfNombresCliente.getText().trim().toUpperCase());
     oKardex.setObservacion("");
     oKardex.setGrupoNumeracion(1);
     oKardex.setIdProducto(Long.parseLong(oDetalleVenta.getProducto().getIdproducto() + ""));
     oKardex.setCantidad(oDetalleVenta.getCantidadVenta());
     oKardex.setValorUnit(oDetalleVenta.getPrecioVenta());
     oKardex.setIdAlmacenproducto(oDetalleVenta.getIdAlmacenproducto());
     oKardex.setEstado(1);
     //Obtener el ultimo numero de orden de registro de kardex
     long nro = oKardexBl.nroOrdenregistro(oKardex.getIdProducto());
     oKardex.setNroOrden(nro + 1);

     oAlmacenProductoBl = new AlmacenProductoBl();
     AlmacenProducto ap = oAlmacenProductoBl.buscar(oDetalleVenta.getIdAlmacenproducto());
     //oKardex.setStockAnterior(Double.MAX_VALUE);
     oKardex.setStockActual(ap.getStockActual());

     oKardexBl.registrar(oKardex);
     }
     return oKardex;
     }
     */
    /*
     private void actualizarAlmacenStock() {
     for (int i = 0; i < oModeloVentaProducto.getRowCount(); i++) {
     oAlmacenProducto = new AlmacenProducto();
     oAlmacenProductoBl = new AlmacenProductoBl();
     oDetalleVenta = oModeloVentaProducto.get(i);
     oAlmacenProductoTemp = oAlmacenProductoBl.buscarxIdalmacenproducto(oDetalleVenta.getIdAlmacenproducto());
     if (oAlmacenProductoTemp != null) {
     oAlmacenProductoTemp.setStockActual(oAlmacenProductoTemp.getStockActual().subtract(oDetalleVenta.getCantidadVenta()));
     oAlmacenProductoBl.actualizar(oAlmacenProductoTemp);
     }
     }
     }
     */

    private void cargarCbxAlmacen() {
        oAlmacenCtrl = new AlmacenCtrl(root);
        oAlmacenCtrl.rellenaAlmacen(cbxAlmacen);
        oAlmacenCtrl.defaultSelectAlmacen("farmacia", cbxAlmacen);
    }

    private void cargarCbxTipoComprobanteFar() {
        oFarComprobanteCtrl = new FarComprobanteCtrl(root);
        oFarComprobanteCtrl.rellenaTipoComprobante(cbxTipoComprobante, FarComprobante.VENTA);
    }

    private void resetComponent() {
        cbxTipoComprobante.setSelectedIndex(0);
        txfNumComprobante.setText("");
        jdcFechaComprobante.setDate(null);
        txfSerie.setText("");
        cbxTipoDoc2.setSelectedIndex(0);
        //oTipoDocIdentidadCtrl.defaultSelectCbx("DNI", cbxTipoDoc1);
        txfDireccion.setText("");
        txfCorreo.setText("");
        //txfNumDni.setText("");
        //txfNombresCliente.setText("");
        txfRuc.setText("");
        txfRazonSocial.setText("");
        oModeloVentaProducto.clear();
        resetTotales();
        oPersonaPaciente = null;
        personalizaTabla();
        resetPaintComponentes();
        Utilitarios.fechaActual(jdcFechaComprobante);
        tipoComprobante = "";
        txfEfectivo.setText("");
        txfVuelto.setText("");
        oCuentaxcobrar = null;
        lblSubTotal.setText("0.00");
        lblTotalDescuento.setText("0.00");
        lblMontoIgv.setText("0.00");
        lblMontoTotal.setText("0.00");
    }

    public void EnviarDatosCaja(Caja oCaja) {
        this.oCaja = oCaja;
    }

    private void configurarComprobante() {
        oVenta = new Venta();
        oVenta.setFarComprobante((FarComprobante) cbxTipoComprobante.getSelectedItem());
        oVenta.setGrupoNumeracion(((FarComprobante) cbxTipoComprobante.getSelectedItem()).getGrupoNumeracion());
        txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "########"));
        resetPaintComponentes();
        if (cbxTipoComprobante.getSelectedItem() != null) {
            switch (cbxTipoComprobante.getSelectedItem().toString().trim()) {
                case "FACTURA":
                    tipoComprobante = "FacturaFar";
                    txfSerie.setText("");
                    break;
                case "BOLETA":
                    tipoComprobante = "OtrosComprobantesFar";
                    txfSerie.setText("");
                    break;
                case "BOLETA SEGUROS":
                    tipoComprobante = "Far_BoletaSeguros";
                    txfSerie.setText("");
                    break;
                case "BOLETA ELECTRONICA":
                    oTipoDocIdentidadCtrl.defaultSelectCbx("DNI", cbxTipoDoc2);
                    tipoComprobante = Variables.FAR_BOLETA_ELECTRONICA;
                    txfSerie.setText("BF01");
                    break;
                case "FACTURA ELECTRONICA":
                    oTipoDocIdentidadCtrl.defaultSelectCbx("RUC", cbxTipoDoc2);
                    tipoComprobante = Variables.FAR_FACTURA_ELECTRONICA;
                    txfSerie.setText("FF01");
                    break;
                case Variables.COMPROBANTE_TICKET_BOLETA:
                    oTipoDocIdentidadCtrl.defaultSelectCbx("DNI", cbxTipoDoc2);
                    tipoComprobante = Variables.FAR_TICKET_BOLETA;
                    txfSerie.setText("B001");
                    break;
                default:
                    txfSerie.setText("");
            }
        }

    }

    private long generarNumeracionComprobante() {
        oVentaBl = new VentaBl();
        return oVentaBl.obtenerUltNumero(oVenta.getGrupoNumeracion()) + 1;
    }

    private int obtenerNumOperacion() {
        oVentaBl = new VentaBl();
        return oVentaBl.obtenerNumOperacion() + 1;
    }

    private void resetPaintComponentes() {
        Utilitarios.resetPaintBorderTxf(txfNumComprobante);
        Utilitarios.resetPaintCbx(cbxTipoComprobante);
        Utilitarios.resetPaintJdc(jdcFechaComprobante);
    }

    private void insertarJifBuscaPersonaPaciente() {
        int op;
        op = JOptionPane.showConfirmDialog(null, "Â¿Desea registrar al paciente?", "AtenciÃ³n", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            root.jifAdministrarPersonanatural.setInvocador(JIF_AdministrarPersonaNatural.JIF_VENTAS);
            root.insertarInternalFrames(root.jifAdministrarPersonanatural);
            root.jifAdministrarPersonanatural.inicializar();
        }
    }

    private void insertarJifBuscaRuc() {
        int op;
        op = JOptionPane.showConfirmDialog(null, "Â¿Desea registrar la persona juridica?", "AtenciÃ³n", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            root.jifAdministrarPersonaJuridica.setInvocador(JIF_AdministrarPersonaJuridica.JIF_VENTAS);
            root.insertarInternalFrames(root.jifAdministrarPersonaJuridica);
        }
    }

    private void imprimirComprobante() {
        try {
            ds = new lissa.ds.DSConeccion(root.getConfig());
            reportGenric = new ReportGeneric(ds.getConeccion());
            reportGenric.setReportParent("/lissa/reportes/");
            reportPanel = reportGenric.mkReport(tipoComprobante, new String[]{"ID_COMPROBANTE"}, new Object[]{oVenta.getIdventa()});
            reportVisor = new JInternalFrame();
            reportVisor.setTitle("Comprobante");
            reportVisor.setIconifiable(true);
            reportVisor.setClosable(true);
            reportVisor.setMaximizable(true);
            reportVisor.getContentPane().add(reportPanel);
            root.insertarInternalFrames(reportVisor);
            reportVisor.setMaximum(true);
        } catch (Exception ex) {
            Logger.getLogger(JIF_RegVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void calcularVuelto() {
        BigDecimal vuelto = BigDecimal.ZERO;
        BigDecimal efectivo = BigDecimal.ZERO;;
        efectivo = new BigDecimal(txfEfectivo.getText().trim());
        vuelto = efectivo.subtract(new BigDecimal(lblMontoTotal.getText().trim())).setScale(2, RoundingMode.HALF_UP);
        txfVuelto.setText(vuelto.toString());
    }

    private void insertarJifFormaPago() {
        root.insertarInternalFrames(root.jifFormaPago);
        root.jifFormaPago.inicializar();
        root.jifFormaPago.enviaDatosPersona(oPersonaCliente);
        root.jifFormaPago.enviaDatos(lblMontoTotal.getText().trim());
    }

    void enviaCuentasxcobrar(BigDecimal totalAPagar, BigDecimal totalDescuento) {
        calcularTotalesaPagar(totalAPagar, totalDescuento);
    }

    void enviaCuentasxcobrar(Cuentaxcobrar obj, BigDecimal totalAPagar, BigDecimal totalDescuento) {
        oCuentaxcobrar = obj;
        calcularTotalesaPagar(totalAPagar, totalDescuento);
    }

    void enviaCuentasxcobrar(Cuentaxcobrar obj, BigDecimal totalAPagar, HistorialAtencionFps hfps, BigDecimal totalDescuento) {
        oCuentaxcobrar = obj;
        oHistorialAtencionFps = hfps;
        calcularTotalesaPagar(totalAPagar, totalDescuento);
    }

    //Metodo que calcula  todos los totales en funciona los parametros ingresados en formas de pago
    void calcularTotalesaPagar(BigDecimal totalAPagar, BigDecimal totalDescuento) {
        montoTotal = totalAPagar;
        montoSubTotal = totalAPagar.divide(Variables.CIEN_IGV, 2, RoundingMode.HALF_UP);
        montoIgv = ((totalAPagar.divide(Variables.CIEN_IGV, 2, RoundingMode.HALF_UP)).multiply(Variables.IGV)).setScale(2, RoundingMode.HALF_UP);
        totalDescuentos = totalDescuento.divide(Variables.CIEN_IGV, 2, RoundingMode.HALF_UP);

        lblMontoTotal.setText(montoTotal.toString());
        lblSubTotal.setText(montoSubTotal.toString());
        lblMontoIgv.setText(montoIgv.toString());
        lblTotalDescuento.setText(totalDescuentos.toString());
    }

    private void registrar() {
        int res = 0;
        if (isDatosValidos()) {
            res = registrarVenta(oModeloVentaProducto);
            if (res == Variables.SUCCESS) {
                Mensajes.msjRegCorrecta();
                //Agregar  validador  para  imprimir  cuando sea mayor  a  cero
                if (oVenta.getTotal().compareTo(BigDecimal.ZERO) == 1) {
                    imprimirComprobante();
                }

                //if (oCuentaxcobrar.getMontoPagado().compareTo(BigDecimal.ZERO) == 1) {//el primer valor es mayor
                //}
                resetPaintComponent();
                resetTotales();
                resetComponent();
                oHistorialAtencionFps = null;
                oCuentaxcobrar = null;
                oPersonaPaciente = null;
                oPersonaCliente = null;
            } else {
                Mensajes.msjRegError();
            }

        } else {
            Mensajes.msjValidarIngreso();
            paintComponents();
        }
    }

    public void cargarDatosPersonaCliente(Persona beanTabla) {
        oPersonaCliente = beanTabla;
        if (cbxTipoComprobante.getSelectedItem().toString().equals("FACTURA ELECTRONICA")) {
            txfRuc.setText(oPersonaCliente.getRuc().trim());
        } else {
            txfRuc.setText(oPersonaCliente.getNumeroDocumento().trim());
        }
        txfRazonSocial.setText(oPersonaCliente.getTipoPersona().getDescripcion().trim().equals("PERSONA NATURAL") ? oPersonaCliente.getNombre().trim() + " " + oPersonaCliente.getApellidoPaterno().trim() + " " + oPersonaCliente.getApellidoMaterno().trim() : oPersonaCliente.getApellidoPaterno().trim());
        txfDireccion.setText(!oPersonaCliente.getDireccion().trim().equals("") ? oPersonaCliente.getDireccion().trim() : "");
    }

    private void validarTipoDoc() {
        if (cbxTipoComprobante.getSelectedIndex() > 0) {
            if (((FarComprobante) cbxTipoComprobante.getSelectedItem()).getComprobante().trim().equals("FACTURA ELECTRONICA")) {
                if (!((TipoDocidentidad) cbxTipoDoc2.getSelectedItem()).getDocumento().trim().equals("RUC")) {
                    JOptionPane.showMessageDialog(null, "Tipo de documento invalido ", "Error", JOptionPane.ERROR_MESSAGE);
                    cbxTipoDoc2.setSelectedIndex(0);
                }
            }
        }

    }

}
