package lissa.gui;

import java.awt.Color;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import lissa.be.EstadoCivil;
import lissa.be.HistoriaClinica;
import lissa.be.Persona;
import lissa.be.TipoDocidentidad;
import lissa.be.TipoHistoriaClinica;
import lissa.bl.HistoriaClinicaBl;
import lissa.bl.PersonaBl;
import lissa.bl.TipoPersonaBl;
import lissa.controller.EstadoCivilCtrl;
import lissa.controller.TipoDocIdentidadCtrl;
import lissa.controller.TipoHCCtrl;
import lissa.table.ModeloPersonas;
import lissa.util.Mensajes;
import lissa.util.Utilitarios;

/**
 *
 * @author JSULCAG
 */
public class JIF_TriajePersonas extends javax.swing.JInternalFrame {

    private JF_Principal root;
    private Persona oPersona;
    private PersonaBl oBLPersona;
    private ModeloPersonas modeloPersonas;
    private Persona beanTablaPersona;
    private TipoDocIdentidadCtrl oTipoDocIdentidadCtrl;
    private EstadoCivilCtrl oEstadoCivilCtrl;
    private HistoriaClinica oHistoriaClinica;
    private HistoriaClinicaBl oBlHistoriaClinica;
    private JComboBox cbxTipoHCBusq;
    private JComboBox cbxTipohc;
    private TipoHCCtrl oTipoHCCtrl;
    private int banBoton = 0;
    private JP_Print_HistoriaClinica printHc;

    public JIF_TriajePersonas(JF_Principal root) {
        initComponents();
        this.root = root;
        modeloPersonas = new ModeloPersonas();
        tblResultados.setModel(modeloPersonas);
        printHc = new JP_Print_HistoriaClinica(root);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txfBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txfApePaterno = new javax.swing.JTextField();
        txfApeMaterno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txfNombres = new javax.swing.JTextField();
        txfnNumDni = new javax.swing.JTextField();
        txfTelefono = new javax.swing.JTextField();
        jdcFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        cbxSexo = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        txfGradoInstruccion = new javax.swing.JTextField();
        txfLugarProcedencia = new javax.swing.JTextField();
        txfLugarNacimiento = new javax.swing.JTextField();
        cbxTipoDoc = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        txfCorreo = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        cbxEstadoCivil = new javax.swing.JComboBox();
        jLabel44 = new javax.swing.JLabel();
        txfOcupacion = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxAutorizaUsoDatos = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txfEdad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txfDireccion = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txfHistoriaClinica = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnImprimir1 = new javax.swing.JButton();
        lblEstadoHc = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Historia Clinica");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BÚSQUEDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        txfBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBusquedaActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/search.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblResultadosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblResultados);

        jLabel10.setText("Apellidos y Nombres/DNI:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txfBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DE LA PERSONA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Apellido Paterno :");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Apellido Materno :");

        txfApePaterno.setEnabled(false);
        txfApePaterno.setPreferredSize(new java.awt.Dimension(234, 20));

        txfApeMaterno.setEnabled(false);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Nombres :");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Fecha de  Nacimiento :");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Tipo Doc :");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Correo electrónico :");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Grado de instrucción :");

        txfNombres.setEnabled(false);
        txfNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfNombresActionPerformed(evt);
            }
        });

        txfnNumDni.setEnabled(false);
        txfnNumDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfnNumDniActionPerformed(evt);
            }
        });
        txfnNumDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfnNumDniKeyReleased(evt);
            }
        });

        txfTelefono.setEnabled(false);

        jdcFechaNacimiento.setEnabled(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Sexo :");

        cbxSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<SELECCIONE>", "FEMENINO", "MASCULINO" }));
        cbxSexo.setEnabled(false);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Lugar de Procedencia :");

        txfGradoInstruccion.setEnabled(false);

        txfLugarProcedencia.setEnabled(false);

        txfLugarNacimiento.setEnabled(false);
        txfLugarNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfLugarNacimientoActionPerformed(evt);
            }
        });

        cbxTipoDoc.setEnabled(false);
        cbxTipoDoc.setMaximumSize(new java.awt.Dimension(28, 20));

        jLabel40.setText("Telefono :");

        txfCorreo.setEnabled(false);

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Estado civil :");

        cbxEstadoCivil.setEnabled(false);

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Ocupación :");

        txfOcupacion.setEnabled(false);

        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel45.setText("Nº Doc :");

        jLabel52.setText("Lugar de Nacimiento :");

        jLabel4.setText("Autoriza uso de datos :");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        cbxAutorizaUsoDatos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<SELECCIONE>", "SI", "NO", "REVOCÓ" }));
        cbxAutorizaUsoDatos.setEnabled(false);

        jLabel2.setText("Edad :");

        txfEdad.setEnabled(false);

        jLabel6.setText("Direccción :");

        txfDireccion.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 296, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txfnNumDni, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txfApePaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txfOcupacion)
                                            .addComponent(txfDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                                        .addGap(19, 19, 19)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel40))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txfNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel52))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txfGradoInstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbxSexo, 0, 185, Short.MAX_VALUE)
                                        .addComponent(txfLugarNacimiento))
                                    .addComponent(cbxAutorizaUsoDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(428, 428, 428)))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txfLugarProcedencia, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfApeMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfEdad))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(txfNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txfApePaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txfApeMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(cbxTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(txfnNumDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jdcFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel1)
                            .addComponent(jLabel41)
                            .addComponent(cbxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txfLugarProcedencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel52)
                    .addComponent(txfLugarNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(txfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(txfGradoInstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(txfOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxAutorizaUsoDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(txfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HISTORIA CLÍNICA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("N° :");

        txfHistoriaClinica.setEditable(false);
        txfHistoriaClinica.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txfHistoriaClinica.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfHistoriaClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(txfHistoriaClinica))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/cancel.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(65, 40));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Save.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.setPreferredSize(new java.awt.Dimension(65, 40));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/edit.png"))); // NOI18N
        btnEditar.setEnabled(false);
        btnEditar.setPreferredSize(new java.awt.Dimension(65, 40));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/new.png"))); // NOI18N
        btnNuevo.setPreferredSize(new java.awt.Dimension(65, 40));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnImprimir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Impresora.png"))); // NOI18N
        btnImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir1ActionPerformed(evt);
            }
        });

        lblEstadoHc.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblEstadoHc.setForeground(new java.awt.Color(0, 204, 0));
        lblEstadoHc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblEstadoHc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstadoHc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnImprimir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBusquedaActionPerformed
        btnBuscar.doClick();
    }//GEN-LAST:event_txfBusquedaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarPersona();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblResultadosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultadosMouseReleased
        if (tblResultados.getRowSelectionAllowed() && tblResultados.getSelectedRow() != -1) {
            try {
                resetComponent();
                obtenerDatosPaciente();
                estadoTextFields(false);
                activarBotones(true, true, false, true);
            } catch (SQLException ex) {
                Logger.getLogger(JIF_TriajePersonas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tblResultadosMouseReleased

    private void txfNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfNombresActionPerformed

    private void txfnNumDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfnNumDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfnNumDniActionPerformed

    private void txfnNumDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfnNumDniKeyReleased
        if (cbxTipoDoc.getSelectedItem().toString().trim().equals("DNI")) {
            Utilitarios.validaNumeroCaracteres(txfnNumDni, 8);
        }
        Utilitarios.validaCaracterNumerico(evt, txfnNumDni);
        txfnNumDni.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_txfnNumDniKeyReleased

    private void txfLugarNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfLugarNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfLugarNacimientoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        configuraCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        configuraGuardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblResultados.getSelectedRow() != -1) {
            configuraActualizar();
        } else {
            JOptionPane.showMessageDialog(null, "Por favor seleccione una persona", "Atención", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        configuraNuevo();
        personalizaVistaTabla();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir1ActionPerformed
        imprimir();
    }//GEN-LAST:event_btnImprimir1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir1;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox cbxAutorizaUsoDatos;
    private javax.swing.JComboBox cbxEstadoCivil;
    private javax.swing.JComboBox cbxSexo;
    private javax.swing.JComboBox cbxTipoDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFechaNacimiento;
    private javax.swing.JLabel lblEstadoHc;
    private javax.swing.JTable tblResultados;
    private javax.swing.JTextField txfApeMaterno;
    private javax.swing.JTextField txfApePaterno;
    private javax.swing.JTextField txfBusqueda;
    private javax.swing.JTextField txfCorreo;
    private javax.swing.JTextField txfDireccion;
    private javax.swing.JTextField txfEdad;
    private javax.swing.JTextField txfGradoInstruccion;
    private javax.swing.JTextField txfHistoriaClinica;
    private javax.swing.JTextField txfLugarNacimiento;
    private javax.swing.JTextField txfLugarProcedencia;
    private javax.swing.JTextField txfNombres;
    private javax.swing.JTextField txfOcupacion;
    private javax.swing.JTextField txfTelefono;
    private javax.swing.JTextField txfnNumDni;
    // End of variables declaration//GEN-END:variables

    private void buscarPersona() {
        oPersona = new Persona();
        oBLPersona = new PersonaBl();
        String ref = txfBusqueda.getText().trim().toUpperCase();
        if (!ref.equals("")) {
            if (!oBLPersona.buscar(ref).isEmpty()) {
                modeloPersonas.addAll(oBLPersona.buscar(ref));
            } else {
                JOptionPane.showMessageDialog(null, "No existe resultados de búsqueda", "Atención", JOptionPane.INFORMATION_MESSAGE);
                modeloPersonas.clear();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese parámetros de búsqueda", "Atención", JOptionPane.INFORMATION_MESSAGE);
        }

        personalizaVistaTabla();
    }

    private void personalizaVistaTabla() {
        Utilitarios.formateaColumna(0, tblResultados, 60);
    }

    void resetComponent() {
        this.txfApePaterno.setText("");
        this.txfApeMaterno.setText("");
        this.txfNombres.setText("");
        this.txfDireccion.setText("");
        this.jdcFechaNacimiento.setDate(null);
        this.txfnNumDni.setText("");
        this.txfTelefono.setText("");
        this.txfHistoriaClinica.setText("");
        this.cbxSexo.setSelectedIndex(0);
        this.txfGradoInstruccion.setText("");
        this.txfLugarNacimiento.setText("");
        this.txfLugarProcedencia.setText("");
        this.txfBusqueda.setText("");
        this.cbxEstadoCivil.setSelectedIndex(0);
        this.txfCorreo.setText("");
        cbxTipoDoc.setSelectedIndex(0);
        cbxAutorizaUsoDatos.setSelectedIndex(0);
        lblEstadoHc.setText("");
        if (oHistoriaClinica != null) {
            oHistoriaClinica = null;
        }
        if (beanTablaPersona != null) {
            beanTablaPersona = null;
        }

    }

    private void obtenerDatosPaciente() throws SQLException {
        //resetComponent();
        beanTablaPersona = (Persona) modeloPersonas.get(tblResultados.getSelectedRow());
        this.txfNombres.setText(beanTablaPersona.getNombre());
        this.txfApePaterno.setText(beanTablaPersona.getApellidoPaterno());
        this.txfApeMaterno.setText(beanTablaPersona.getApellidoMaterno());
        this.txfDireccion.setText(beanTablaPersona.getDireccion()!=null?beanTablaPersona.getDireccion().trim():"");
        this.jdcFechaNacimiento.setDate(beanTablaPersona.getFechaNacimiento());
        //Recuperar tipo de documento
        if (beanTablaPersona.getTipoDocidentidad() == null) {
            cbxTipoDoc.setSelectedIndex(0);
        } else {
            oTipoDocIdentidadCtrl.recuperaDatosTipoDocumento(beanTablaPersona.getTipoDocidentidad().getIdtipodocidentidad(), cbxTipoDoc);
        }
        if (beanTablaPersona.getNumeroDocumento() != null) {
            this.txfnNumDni.setText(beanTablaPersona.getNumeroDocumento());
        } else {
            this.txfnNumDni.setText("");
        }
        this.txfTelefono.setText(beanTablaPersona.getTelefono());
        this.txfGradoInstruccion.setText(beanTablaPersona.getGradoInstruccion());
        this.txfLugarNacimiento.setText(beanTablaPersona.getLugarNacimiento());
        this.txfLugarProcedencia.setText(beanTablaPersona.getLugarProcedencia());
        if (beanTablaPersona.getSexo() == null || beanTablaPersona.getSexo().equals("")) {
            this.cbxSexo.setSelectedIndex(0);
        } else {
            this.cbxSexo.setSelectedItem(beanTablaPersona.getSexo());
        }
        //Recuperar estado civil
        if (beanTablaPersona.getEstadoCivil() == null) {
            cbxEstadoCivil.setSelectedIndex(0);
        } else {
            oEstadoCivilCtrl.recuperaDatosEstadoCivil(beanTablaPersona.getEstadoCivil().getIdestadocivil(), cbxEstadoCivil);
        }

        if (beanTablaPersona.getAutorizaUsoDatos() == null || beanTablaPersona.getAutorizaUsoDatos().equals("")) {
            this.cbxAutorizaUsoDatos.setSelectedIndex(0);
        } else {
            this.cbxAutorizaUsoDatos.setSelectedItem(beanTablaPersona.getAutorizaUsoDatos());
        }
        //Buscar Numero de historia clinica del paciente seleccionado
        obtenerHistoriaClinica(beanTablaPersona);
    }

    private void obtenerHistoriaClinica(Persona beanTablaPersona) {
        try {
            oBlHistoriaClinica = new HistoriaClinicaBl();
            oHistoriaClinica = oBlHistoriaClinica.buscar(beanTablaPersona, (TipoHistoriaClinica) cbxTipoHCBusq.getSelectedItem());
            if (oHistoriaClinica != null) {
                txfHistoriaClinica.setText(Utilitarios.numberFormat(oHistoriaClinica.getNumerohc(), "######"));
                if (oHistoriaClinica.getEstado() == 0) {
                    lblEstadoHc.setText("NUEVO");
                } else {
                    lblEstadoHc.setText("");
                }
                if (oHistoriaClinica.getTipoHistoriaClinica() == null) {
                    cbxTipohc.setSelectedIndex(0);
                } else {
                    //Recuperar tipo Historia Clinica
                    oTipoHCCtrl.recuperaDatosTipoHC(oHistoriaClinica.getTipoHistoriaClinica().getIdtipohc(), cbxTipohc);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR FATAL " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void activarBotones(boolean nuevo, boolean modificar, boolean guardar, boolean cancelar) {
        btnNuevo.setEnabled(nuevo);
        btnEditar.setEnabled(modificar);
        btnGuardar.setEnabled(guardar);
        btnCancelar.setEnabled(cancelar);
    }

    private void estadoTextFields(boolean e) {
        this.txfApePaterno.setEnabled(e);
        this.txfApeMaterno.setEnabled(e);
        this.txfNombres.setEnabled(e);
        this.txfDireccion.setEnabled(e);
        this.jdcFechaNacimiento.setEnabled(e);
        this.txfnNumDni.setEnabled(e);
        this.txfTelefono.setEnabled(e);
        this.cbxSexo.setEnabled(e);
        this.txfGradoInstruccion.setEnabled(e);
        this.txfLugarNacimiento.setEnabled(e);
        this.txfLugarProcedencia.setEnabled(e);
        this.cbxTipoDoc.setEnabled(e);
        this.cbxTipohc.setEnabled(e);
        txfCorreo.setEnabled(e);
        this.cbxEstadoCivil.setEnabled(e);
        this.txfOcupacion.setEnabled(e);
        cbxAutorizaUsoDatos.setEnabled(e);
    }

    private void configuraNuevo() {
        banBoton = 1;
        tblResultados.setEnabled(true);
        modeloPersonas.clear();
        resetComponent();
        resetPaintComponent();
        estadoTextFields(true);
        activarBotones(false, false, true, true);
    }

    public void paintComponent() {
        Utilitarios.paintCbxVacio(cbxTipoDoc);
        Utilitarios.paintBorderTxfVacio(txfNombres);
        Utilitarios.paintBorderTxfVacio(txfApePaterno);
        Utilitarios.paintBorderTxfVacio(txfApeMaterno);
        Utilitarios.paintBorderTxfVacio(txfnNumDni);
        Utilitarios.paintJdcVacio(jdcFechaNacimiento);
        Utilitarios.paintBorderTxfVacio(txfTelefono);
    }

    public void resetPaintComponent() {
        Utilitarios.resetPaintCbx(cbxTipoDoc);
        Utilitarios.resetPaintBorderTxf(txfNombres);
        Utilitarios.resetPaintBorderTxf(txfApePaterno);
        Utilitarios.resetPaintBorderTxf(txfApeMaterno);
        Utilitarios.resetPaintBorderTxf(txfnNumDni);
        Utilitarios.resetPaintBorderTxf(txfTelefono);
        Utilitarios.resetPaintJdc(jdcFechaNacimiento);
    }

    private void configuraActualizar() {
        banBoton = 2;
        estadoTextFields(true);
        activarBotones(true, false, true, true);
    }

    private void configuraGuardar() {
        //CUANDO EL REGISTRO DEL PACIENTE ES NUEVO
        if (banBoton == 1) {
            if (isDatosValidos()) {
                if (isDniValido()) {
                    registrar();
                    modeloPersonas.clear();
                    modeloPersonas.add(buscarPersonaXDni());
                    personalizaVistaTabla();
                    resetComponent();
                    resetPaintComponent();
                    estadoTextFields(false);
                } else {
                    JOptionPane.showMessageDialog(null, "La persona con el N° de DNI ya se encuentra registrado", "Atención", JOptionPane.INFORMATION_MESSAGE);
                    txfnNumDni.setText("");
                    txfnNumDni.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor ingrese todos los datos", "Atención", JOptionPane.INFORMATION_MESSAGE);
                paintComponent();
            }

        } else if (banBoton == 2) {
            if (isDatosValidos()) {
                actualizar();
                modeloPersonas.clear();
                modeloPersonas.add(buscarPersonaXDni());
                personalizaVistaTabla();
                resetComponent();
                resetPaintComponent();
            } else {
                JOptionPane.showMessageDialog(null, "Por favor ingrese todos los datos", "Atención", JOptionPane.INFORMATION_MESSAGE);
                paintComponent();
            }

        }

        personalizaVistaTabla();
    }

    private boolean isDniValido() {
        oBLPersona = new PersonaBl();
        boolean existeDni = false;
        if (oBLPersona.buscarPersonaXDni(txfnNumDni.getText().trim()) != null) {
            existeDni = false;
        } else {
            existeDni = true;
        }
        return existeDni;
    }

    private boolean isDatosValidos() {
        return (!this.txfNombres.getText().trim().equals("")
                && !this.txfApePaterno.getText().trim().equals("")
                && !this.txfApeMaterno.getText().trim().equals("")
                && this.cbxTipoDoc.getSelectedIndex() > 0
                && !this.txfnNumDni.getText().trim().equals("")
                && jdcFechaNacimiento.getDate() != null
                && !txfTelefono.getText().trim().equals(""));

    }

    private void registrar() {
        //Registrar datos de la persona
        registrarPersona();
        Mensajes.msjRegCorrecta();
    }

    private Persona registrarPersona() {
        oPersona = new Persona();
        oBLPersona = new PersonaBl();

        oPersona.setApellidoPaterno(txfApePaterno.getText().trim().toUpperCase());
        oPersona.setApellidoMaterno(txfApeMaterno.getText().trim().toUpperCase());
        oPersona.setNombre(txfNombres.getText().trim().toUpperCase());
        oPersona.setNumeroDocumento(txfnNumDni.getText().trim().toUpperCase());
        oPersona.setDireccion(txfDireccion.getText().toUpperCase().trim());
        oPersona.setFechaNacimiento(jdcFechaNacimiento.getDate());
        oPersona.setTelefono(txfTelefono.getText().trim());
        if (cbxSexo.getSelectedIndex() == 0) {
            oPersona.setSexo("");
        } else {
            oPersona.setSexo(cbxSexo.getSelectedItem().toString().toUpperCase().trim());
        }
        oPersona.setEstado(1);
        oPersona.setFechaReg(new Date());
        oPersona.setGradoInstruccion(txfGradoInstruccion.getText().toUpperCase().trim());
        oPersona.setLugarNacimiento(txfLugarNacimiento.getText().toUpperCase().trim());
        oPersona.setLugarProcedencia(txfLugarProcedencia.getText().toUpperCase().trim());
        oPersona.setOcupacion(txfOcupacion.getText().toUpperCase().trim());
        oPersona.setCorreoElectronico(txfCorreo.getText().toUpperCase().trim());
        if (cbxTipoDoc.getSelectedIndex() > 0) {
            oPersona.setTipoDocidentidad((TipoDocidentidad) cbxTipoDoc.getSelectedItem());
        }
        if (cbxEstadoCivil.getSelectedIndex() > 0) {
            oPersona.setEstadoCivil((EstadoCivil) cbxEstadoCivil.getSelectedItem());
        }

        if (cbxAutorizaUsoDatos.getSelectedIndex() > 0) {
            oPersona.setAutorizaUsoDatos(cbxAutorizaUsoDatos.getSelectedItem().toString().trim());
        } else {
            oPersona.setAutorizaUsoDatos("");
        }
        oPersona.setTipoPersona(new TipoPersonaBl().buscarxId(1));
        oPersona.setRazonSocial("");
        oPersona.setRuc("");
        oPersona.setEsproveedor(0);

        return oBLPersona.registrarPersona(oPersona);
    }

    private Persona buscarPersonaXDni() {
        oBLPersona = new PersonaBl();
        return oBLPersona.buscarPersonaXDni(txfnNumDni.getText().trim());
    }

    private void actualizar() {
        //oPersona = new Persona();
        oPersona = actualizarPersona();
        Mensajes.msjActCorrecta();
    }

    private Persona actualizarPersona() {
        oPersona = new Persona();
        oBLPersona = new PersonaBl();
        oPersona.setIdpersona(beanTablaPersona.getIdpersona());
        oPersona.setApellidoPaterno(txfApePaterno.getText().trim().toUpperCase());
        oPersona.setApellidoMaterno(txfApeMaterno.getText().trim().toUpperCase());
        oPersona.setNombre(txfNombres.getText().trim().toUpperCase());
        oPersona.setNumeroDocumento(txfnNumDni.getText().trim());
        oPersona.setFechaNacimiento(jdcFechaNacimiento.getDate());
        oPersona.setTelefono(txfTelefono.getText().trim());
        oPersona.setEstado(1);
        oPersona.setFechaReg(beanTablaPersona.getFechaReg());
        oPersona.setGradoInstruccion(txfGradoInstruccion.getText().toUpperCase().trim());
        oPersona.setLugarNacimiento(txfLugarNacimiento.getText().toUpperCase().trim());
        oPersona.setLugarProcedencia(txfLugarProcedencia.getText().toUpperCase().trim());
        if (cbxSexo.getSelectedIndex() == 0) {
            oPersona.setSexo("");
        } else {
            oPersona.setSexo(cbxSexo.getSelectedItem().toString().toUpperCase().trim());
        }
        oPersona.setOcupacion(txfOcupacion.getText().toUpperCase().trim());
        oPersona.setCorreoElectronico(txfCorreo.getText().toUpperCase().trim());
        if (cbxTipoDoc.getSelectedIndex() > 0) {
            oPersona.setTipoDocidentidad((TipoDocidentidad) cbxTipoDoc.getSelectedItem());
        }
        if (cbxEstadoCivil.getSelectedIndex() > 0) {
            oPersona.setEstadoCivil((EstadoCivil) cbxEstadoCivil.getSelectedItem());
        }

        if (cbxAutorizaUsoDatos.getSelectedIndex() > 0) {
            oPersona.setAutorizaUsoDatos(cbxAutorizaUsoDatos.getSelectedItem().toString().trim());
        } else {
            oPersona.setAutorizaUsoDatos("");
        }
        oPersona.setTipoPersona(beanTablaPersona.getTipoPersona() != null ? beanTablaPersona.getTipoPersona():new TipoPersonaBl().buscarxId(1));
        oPersona.setRazonSocial(!beanTablaPersona.getRazonSocial().trim().equals("")?beanTablaPersona.getRazonSocial().trim():"");
        oPersona.setRuc(!beanTablaPersona.getRuc().trim().equals("")?beanTablaPersona.getRuc().trim():"");
        oPersona.setEsproveedor(beanTablaPersona.getEsproveedor());
        //oPersona.setDireccion(beanTablaPersona.getDireccion() == null? "": beanTablaPersona.getDireccion().trim());
        oPersona.setDireccion(txfDireccion.getText().toUpperCase().trim());
        
        oBLPersona.actualizar(oPersona);
        return oPersona;
    }

    private void configuraCancelar() {
        resetComponent();
        resetPaintComponent();
        estadoTextFields(false);
        activarBotones(true, false, false, true);
        modeloPersonas.clear();
        personalizaVistaTabla();
    }

    void iniciar() {
        cbxTipoHCBusq = new JComboBox();
        cbxTipohc = new JComboBox();
        oTipoHCCtrl = new TipoHCCtrl(root);
        oTipoHCCtrl.rellenaTipoHC(cbxTipohc);
        oTipoHCCtrl.rellenaTipoHC(cbxTipoHCBusq);
        oTipoHCCtrl.defaultSelectCbx("HISTORIA CLINICA AMBULATORIA", cbxTipohc);
        oTipoHCCtrl.defaultSelectCbx("HISTORIA CLINICA AMBULATORIA", cbxTipoHCBusq);
        //llenarCbxTipoDoc();
        oTipoDocIdentidadCtrl = new TipoDocIdentidadCtrl(root);
        oTipoDocIdentidadCtrl.rellenaTipoDocumento(cbxTipoDoc);
        //llenarCbxEstadoCivil();
        oEstadoCivilCtrl = new EstadoCivilCtrl(root);
        oEstadoCivilCtrl.rellenaEstadoCivil(cbxEstadoCivil);
        //llenarCbxTipoPaciente
        //FormateTabla
        configuraCancelar();
        personalizaVistaTabla();
    }

    private void imprimir() {
        if (isDatosValidosImpresion()) {
            root.jdVisorHc.setPrintHistoriaClinica(printHc);
            root.jdVisorHc.clearData();
            if (beanTablaPersona != null && oHistoriaClinica != null) {
                printHc.setFecha_registro(Utilitarios.formatFecha(new Date()));
                printHc.setNumero_hc(oHistoriaClinica.getNumerohc().toString());
                printHc.setApe_paterno(beanTablaPersona.getApellidoPaterno());
                printHc.setApe_materno(beanTablaPersona.getApellidoMaterno());
                printHc.setNombres(beanTablaPersona.getNombre());
                if (beanTablaPersona.getSexo() != null && beanTablaPersona.getSexo().equals("MASCULINO")) {
                    printHc.setSexo("M");
                } else if (beanTablaPersona.getSexo() != null && beanTablaPersona.getSexo().equals("FEMENINO")) {
                    printHc.setSexo("F");
                }
                printHc.setFecha_nacimiento(beanTablaPersona.getFechaNacimiento() != null ? Utilitarios.formatFecha(beanTablaPersona.getFechaNacimiento()) : "");
                printHc.setEdad(beanTablaPersona.getFechaNacimiento() != null ? Utilitarios.obtenerEdad(beanTablaPersona.getFechaNacimiento()) + "" : "");
                printHc.setLugar_nacimiento(beanTablaPersona.getLugarNacimiento() != null ? beanTablaPersona.getLugarNacimiento() : "");
                printHc.setProcedencia(beanTablaPersona.getLugarProcedencia() != null ? beanTablaPersona.getLugarProcedencia() : "");
                printHc.setGrado_instruccion(beanTablaPersona.getGradoInstruccion() != null ? beanTablaPersona.getGradoInstruccion() : "");
                printHc.setEstado_civil(beanTablaPersona.getEstadoCivil() != null ? beanTablaPersona.getEstadoCivil().getEstadoCivil() : "");
                printHc.setOcupacion(beanTablaPersona.getOcupacion() != null ? beanTablaPersona.getOcupacion() : "");
                printHc.setDni(beanTablaPersona.getNumeroDocumento() != null ? beanTablaPersona.getNumeroDocumento() : "");
                printHc.setCelular(beanTablaPersona.getTelefono() != null ? beanTablaPersona.getTelefono() : "");

                root.jdVisorHc.pintarDatos();
                root.jdVisorHc.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "No cuenta con HC", "Atención", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            Mensajes.hcSeleccionePersona();
        }
    }

    private boolean isDatosValidosImpresion() {
        return (tblResultados.getRowSelectionAllowed() && tblResultados.getSelectedRow() != -1);
    }

}
