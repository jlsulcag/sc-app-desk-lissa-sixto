/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lissa.test;

import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JTextField;
import lissa.util.Utilitarios;

/**
 *
 * @author JSULCAG
 */
public class PruebaComponentes extends javax.swing.JFrame {

    /**
     * Creates new form PruebaComponentes
     */
    public PruebaComponentes() {
        initComponents();
        fechaAutocomplete();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        cbxItems = new javax.swing.JComboBox();
        cbx2 = new javax.swing.JComboBox();
        txf = new javax.swing.JTextField();
        js = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyPressed(evt);
            }
        });

        cbxItems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxItems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbxItemsKeyPressed(evt);
            }
        });

        cbx2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfKeyPressed(evt);
            }
        });

        js.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(cbxItems, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbx2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txf)
                    .addComponent(js))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbx2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(js, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooser1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyPressed
        Utilitarios.requestFocusEnter(cbxItems, evt);
    }//GEN-LAST:event_jDateChooser1KeyPressed

    private void cbxItemsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxItemsKeyPressed
        Utilitarios.requestFocusEnter(cbx2, evt);
    }//GEN-LAST:event_cbxItemsKeyPressed

    private void txfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfKeyPressed
        Utilitarios.requestFocusEnter(js, evt);
    }//GEN-LAST:event_txfKeyPressed

    private void jsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsKeyPressed
        Utilitarios.requestFocusEnter(txf, evt);
    }//GEN-LAST:event_jsKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebaComponentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebaComponentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebaComponentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebaComponentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PruebaComponentes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbx2;
    private javax.swing.JComboBox cbxItems;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner js;
    private javax.swing.JTextField txf;
    // End of variables declaration//GEN-END:variables

    private void fechaAutocomplete() {
        jDateChooser1.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyListener() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
                try {
                    //AQUI EVENTO PARA KEYPRESSED

                } catch (UnsupportedOperationException uop) {
                    System.out.println(uop.getMessage());
                }

            }

            @Override
            public void keyReleased(KeyEvent e) {
                try {

                    Calendar c = new GregorianCalendar();

                    String annio = Integer.toString(c.get(Calendar.YEAR));

                    if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().length() == 2) {
                        ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).setText(((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText() + "/");
                    } else if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().length() == 5) {
                        ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).setText(((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText() + "/");
                    } else if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().length() == 6) {
                        if (KeyEvent.VK_ENTER == e.getKeyCode()) {
                            ((JTextField) jDateChooser1.getDateEditor().getUiComponent()).setText(((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText() + annio);
                            cbxItems.requestFocus();
                        }

                    } else if (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().length() == 10) {
                        if (KeyEvent.VK_ENTER == e.getKeyCode()) {
                            cbxItems.requestFocus();
                        }

                    }

                } catch (UnsupportedOperationException uop) {
                    System.out.println(uop.getMessage());
                }
            }
        });
    }
}
